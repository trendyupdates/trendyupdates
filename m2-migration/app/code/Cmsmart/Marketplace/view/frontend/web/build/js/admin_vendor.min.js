define([
    'jquery',
    'bootstrap',
    'moment'
],function($, bootstrap, moment){
    'use strict';

    return function (config) {

        (function($,sr){
            // debouncing function from John Hann
            // http://unscriptable.com/index.php/2009/03/20/debouncing-javascript-methods/
            var debounce = function (func, threshold, execAsap) {
                var timeout;

                return function debounced () {
                    var obj = this, args = arguments;
                    function delayed () {
                        if (!execAsap)
                            func.apply(obj, args);
                        timeout = null;
                    }

                    if (timeout)
                        clearTimeout(timeout);
                    else if (execAsap)
                        func.apply(obj, args);

                    timeout = setTimeout(delayed, threshold || 100);
                };
            };

            // smartresize
            jQuery.fn[sr] = function(fn){  return fn ? this.bind('resize', debounce(fn)) : this.trigger(sr); };

        })(jQuery,'smartresize');
        /**
         * To change this license header, choose License Headers in Project Properties.
         * To change this template file, choose Tools | Templates
         * and open the template in the editor.
         */

        var CURRENT_URL = window.location.href.split('#')[0].split('?')[0],
            $BODY = $('body'),
            $MENU_TOGGLE = $('#menu_toggle'),
            $SIDEBAR_MENU = $('#sidebar-menu'),
            $SIDEBAR_FOOTER = $('.sidebar-footer'),
            $LEFT_COL = $('.left_col'),
            $RIGHT_COL = $('.right_col'),
            $NAV_MENU = $('.nav_menu'),
            $FOOTER = $('footer');



// Sidebar
        function init_sidebar() {
// TODO: This is some kind of easy fix, maybe we can improve this
            var setContentHeight = function () {
                // reset height
                $RIGHT_COL.css('min-height', $(window).height());

                var bodyHeight = $BODY.outerHeight(),
                    footerHeight = $BODY.hasClass('footer_fixed') ? -10 : $FOOTER.height(),
                    leftColHeight = $LEFT_COL.eq(1).height() + $SIDEBAR_FOOTER.height(),
                    contentHeight = bodyHeight < leftColHeight ? leftColHeight : bodyHeight;

                // normalize content
                contentHeight -= $NAV_MENU.height() + footerHeight;

                $RIGHT_COL.css('min-height', contentHeight);
            };

            $SIDEBAR_MENU.find('a').on('click', function(ev) {
                console.log('clicked - sidebar_menu');
                var $li = $(this).parent();

                if ($li.is('.active')) {
                    $li.removeClass('active active-sm');
                    $('ul:first', $li).slideUp(function() {
                        setContentHeight();
                    });
                } else {
                    // prevent closing menu if we are on child menu
                    if (!$li.parent().is('.child_menu')) {
                        $SIDEBAR_MENU.find('li').removeClass('active active-sm');
                        $SIDEBAR_MENU.find('li ul').slideUp();
                    }else
                    {
                        if ( $BODY.is( ".nav-sm" ) )
                        {
                            $SIDEBAR_MENU.find( "li" ).removeClass( "active active-sm" );
                            $SIDEBAR_MENU.find( "li ul" ).slideUp();
                        }
                    }
                    $li.addClass('active');

                    $('ul:first', $li).slideDown(function() {
                        setContentHeight();
                    });
                }
            });

// toggle small or large menu
            $MENU_TOGGLE.on('click', function() {
                console.log('clicked - menu toggle');

                if ($BODY.hasClass('nav-md')) {
                    $SIDEBAR_MENU.find('li.active ul').hide();
                    $SIDEBAR_MENU.find('li.active').addClass('active-sm').removeClass('active');
                } else {
                    $SIDEBAR_MENU.find('li.active-sm ul').show();
                    $SIDEBAR_MENU.find('li.active-sm').addClass('active').removeClass('active-sm');
                }

                $BODY.toggleClass('nav-md nav-sm');

                setContentHeight();

                $('.dataTable').each ( function () { $(this).dataTable().fnDraw(); });
            });

            // check active menu
            $SIDEBAR_MENU.find('a[href="' + CURRENT_URL + '"]').parent('li').addClass('current-page');

            $SIDEBAR_MENU.find('a').filter(function () {
                return this.href == CURRENT_URL;
            }).parent('li').addClass('current-page').parents('ul').slideDown(function() {
                setContentHeight();
            }).parent().addClass('active');

            // recompute content when resizing
            $(window).smartresize(function(){
                setContentHeight();
            });

            setContentHeight();

            // fixed sidebar
            if ($.fn.mCustomScrollbar) {
                $('.menu_fixed').mCustomScrollbar({
                    autoHideScrollbar: true,
                    theme: 'minimal',
                    mouseWheel:{ preventDefault: true }
                });
            }
        };
// /Sidebar

        var randNum = function() {
            return (Math.floor(Math.random() * (1 + 40 - 20))) + 20;
        };


// Panel toolbox
        $(document).ready(function() {
            $('.collapse-link').on('click', function() {
                var $BOX_PANEL = $(this).closest('.x_panel'),
                    $ICON = $(this).find('i'),
                    $BOX_CONTENT = $BOX_PANEL.find('.x_content');

                // fix for some div with hardcoded fix class
                if ($BOX_PANEL.attr('style')) {
                    $BOX_CONTENT.slideToggle(200, function(){
                        $BOX_PANEL.removeAttr('style');
                    });
                } else {
                    $BOX_CONTENT.slideToggle(200);
                    $BOX_PANEL.css('height', 'auto');
                }

                $ICON.toggleClass('fa-chevron-up fa-chevron-down');
            });

            $('.close-link').click(function () {
                var $BOX_PANEL = $(this).closest('.x_panel');

                $BOX_PANEL.remove();
            });
        });
// /Panel toolbox

// Tooltip
        $(document).ready(function() {
            $('[data-toggle="tooltip"]').tooltip({
                container: 'body'
            });
        });
// /Tooltip

// Progressbar
        if ($(".progress .progress-bar")[0]) {
            $('.progress .progress-bar').progressbar();
        }
// /Progressbar

// Switchery
        $(document).ready(function() {
            if ($(".js-switch")[0]) {
                var elems = Array.prototype.slice.call(document.querySelectorAll('.js-switch'));
                elems.forEach(function (html) {
                    var switchery = new Switchery(html, {
                        color: '#26B99A'
                    });
                });
            }
        });
// /Switchery

// Table
        $('table input').on('ifChecked', function () {
            checkState = '';
            $(this).parent().parent().parent().addClass('selected');
            countChecked();
        });
        $('table input').on('ifUnchecked', function () {
            checkState = '';
            $(this).parent().parent().parent().removeClass('selected');
            countChecked();
        });

        var checkState = '';

        $('.bulk_action input').on('ifChecked', function () {
            checkState = '';
            $(this).parent().parent().parent().addClass('selected');
            countChecked();
        });
        $('.bulk_action input').on('ifUnchecked', function () {
            checkState = '';
            $(this).parent().parent().parent().removeClass('selected');
            countChecked();
        });
        $('.bulk_action input#check-all').on('ifChecked', function () {
            checkState = 'all';
            countChecked();
        });
        $('.bulk_action input#check-all').on('ifUnchecked', function () {
            checkState = 'none';
            countChecked();
        });

        function countChecked() {
            if (checkState === 'all') {
                $(".bulk_action input[name='table_records']").iCheck('check');
            }
            if (checkState === 'none') {
                $(".bulk_action input[name='table_records']").iCheck('uncheck');
            }

            var checkCount = $(".bulk_action input[name='table_records']:checked").length;

            if (checkCount) {
                $('.column-title').hide();
                $('.bulk-actions').show();
                $('.action-cnt').html(checkCount + ' Records Selected');
            } else {
                $('.column-title').show();
                $('.bulk-actions').hide();
            }
        }



// Accordion
        $(document).ready(function() {
            $(".expand").on("click", function () {
                $(this).next().slideToggle(200);
                $expand = $(this).find(">:first-child");

                if ($expand.text() == "+") {
                    $expand.text("-");
                } else {
                    $expand.text("+");
                }
            });
        });

// NProgress
        if (typeof NProgress != 'undefined') {
            $(document).ready(function () {
                NProgress.start();
            });

            $(window).load(function () {
                NProgress.done();
            });
        }


        //hover and retain popover when on popover content
        var originalLeave = $.fn.popover.Constructor.prototype.leave;
        $.fn.popover.Constructor.prototype.leave = function(obj) {
            var self = obj instanceof this.constructor ?
                obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type);
            var container, timeout;

            originalLeave.call(this, obj);

            if (obj.currentTarget) {
                container = $(obj.currentTarget).siblings('.popover');
                timeout = self.timeout;
                container.one('mouseenter', function() {
                    //We entered the actual popover – call off the dogs
                    clearTimeout(timeout);
                    //Let's monitor popover content instead
                    container.one('mouseleave', function() {
                        $.fn.popover.Constructor.prototype.leave.call(self, self);
                    });
                });
            }
        };

        $('body').popover({
            selector: '[data-popover]',
            trigger: 'click hover',
            delay: {
                show: 50,
                hide: 400
            }
        });


        function gd(year, month, day) {
            return new Date(year, month - 1, day).getTime();
        }


        function init_flot_chart(){
            if( typeof ($.plot) === 'undefined'){ return; }

            console.log('init_flot_chart');

            var chart_plot_data = config.chartPlotData;
            var max_xaxis = config.chartPlotData.length;

            var chart_plot_settings = {
                grid: {
                    show: true,
                    aboveData: true,
                    color: "#3f3f3f",
                    labelMargin: 10,
                    axisMargin: 0,
                    borderWidth: 0,
                    borderColor: null,
                    minBorderMargin: 5,
                    clickable: true,
                    hoverable: true,
                    autoHighlight: true,
                    mouseActiveRadius: 100
                },
                series: {
                    lines: {
                        show: true,
                        fill: true,
                        lineWidth: 2,
                        steps: false
                    },
                    points: {
                        show: true,
                        radius: 4.5,
                        symbol: "circle",
                        lineWidth: 3.0
                    }
                },
                legend: {
                    position: "ne",
                    margin: [0, -25],
                    noColumns: 0,
                    labelBoxBorderColor: null,
                    labelFormatter: function(label, series) {
                        return label + '&nbsp;&nbsp;';
                    },
                    width: 40,
                    height: 1
                },
                colors: ['#96CA59', '#3F97EB', '#72c380', '#6f7a8a', '#f7cb38', '#5a8022', '#2c7282'],
                shadowSize: 0,
                tooltip: true,
                tooltipOpts: {
                    content: "%s: %y.0",
                    xDateFormat: "%d/%m",
                    shifts: {
                        x: -30,
                        y: -50
                    },
                    defaultTheme: false
                },
                yaxis: {
                    min: 0
                },
                xaxis: {
                    mode: "time",
                    minTickSize: [1, "day"],
                    timeformat: "%d/%m/%y",
                    min: chart_plot_data[0][0],
                    max: chart_plot_data[max_xaxis-1][0]
                }
            };

            if ($("#chart_plot").length){
                $.plot( $("#chart_plot"),
                    [{
                        label: "Sales Numbers",
                        data: chart_plot_data,
                        lines: {
                            fillColor: "rgba(150, 202, 89, 0.12)"
                        },
                        points: {
                            fillColor: "#fff" }
                    }], chart_plot_settings);

            }
        }


        function init_chart_doughnut(){

            if( typeof (Chart) === 'undefined'){ return; }

            console.log('init_chart_doughnut');

            if ($('.canvasDoughnut').length){

                var chart_doughnut_settings = {
                    type: 'doughnut',
                    tooltipFillColor: "rgba(51, 51, 51, 0.55)",
                    data: {
                        labels: [
                            "Received",
                            "Remaining"
                        ],
                        datasets: [{
                            data: config.transactionData,
                            backgroundColor: [
                                "#E74C3C",
                                "#26B99A"
                            ],
                            hoverBackgroundColor: [
                                "#E95E4F",
                                "#36CAAB"
                            ]
                        }]
                    },
                    options: {
                        legend: false,
                        responsive: false
                    }
                }

                $('.canvasDoughnut').each(function(){

                    var chart_element = $(this);
                    var chart_doughnut = new Chart( chart_element, chart_doughnut_settings);

                });

            }

        }

        /* SPARKLINES */

        function init_sparklines() {
            if(typeof (jQuery.fn.sparkline) === 'undefined'){ return; }
            console.log('init_sparklines');

            $(".sparkline_transaction").sparkline(config.sparkLineRevenue, {
                type: 'bar',
                height: '125',
                barWidth: 13,
                colorMap: {
                    '7': '#a1a1a1'
                },
                barSpacing: 2,
                barColor: '#26B99A'
            });


            $(".sparkline_session").sparkline(config.sparkLineSession, {
                type: 'bar',
                height: '40',
                barWidth: 8,
                colorMap: {
                    '7': '#a1a1a1'
                },
                barSpacing: 2,
                barColor: '#26B99A'
            });


            $(".sparkline_revenue").sparkline(config.sparkLineRevenue, {
                type: 'line',
                height: '40',
                width: '200',
                lineColor: '#26B99A',
                fillColor: '#ffffff',
                lineWidth: 3,
                spotColor: '#34495E',
                minSpotColor: '#34495E'
            });


        };

        /* AUTOSIZE */

        function init_autosize() {

            if(typeof $.fn.autosize !== 'undefined'){

                autosize($('.resizable_textarea'));

            }

        };

        /* INPUTS */

        function onAddTag(tag) {
            alert("Added a tag: " + tag);
        }

        function onRemoveTag(tag) {
            alert("Removed a tag: " + tag);
        }

        function onChangeTag(input, tag) {
            alert("Changed a tag: " + tag);
        }

        /* DATERANGEPICKER */

        function init_daterangepicker() {

            if( typeof ($.fn.daterangepicker) === 'undefined'){ return; }
            console.log('init_daterangepicker');

            var cb = function(start, end, label) {
                console.log(start.toISOString(), end.toISOString(), label);
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            };

            var optionSet = {
                maxDate: new Date(),
                showDropdowns: true,
                showWeekNumbers: true,
                ranges: {
                    'Today': [moment(), moment()],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                },
                opens: 'left',
                buttonClasses: ['btn btn-default'],
                applyClass: 'btn-small btn-primary',
                cancelClass: 'btn-small',
                format: 'MM/DD/YYYY',
                separator: ' to ',
                locale: {
                    applyLabel: 'Submit',
                    cancelLabel: 'Clear',
                    fromLabel: 'From',
                    toLabel: 'To',
                    customRangeLabel: 'Custom',
                    daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                    monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                    firstDay: 1
                }
            };

            $('#reportrange span').html(moment().subtract(config.chartPlotData.length-1, 'days').format('MMMM D, YYYY') + ' - ' + moment().format('MMMM D, YYYY'));

            $('#reportrange').daterangepicker(optionSet, cb);
            $('#reportrange').on('show.daterangepicker', function() {
                console.log("show event fired");
            });
            $('#reportrange').on('hide.daterangepicker', function() {
                console.log("hide event fired");
            });
            $('#reportrange').on('apply.daterangepicker', function(ev, picker) {
                $("input[name='reportrange']").val(picker.startDate.format('MMMM D, YYYY') + ' - ' + picker.endDate.format('MMMM D, YYYY'));
                $("input[name='daterangelabel']").val(picker.chosenLabel);
                $("#form-reportrange").submit();
            });
            $('#reportrange').on('cancel.daterangepicker', function(ev, picker) {
                console.log("cancel event fired");
            });

        }

        function init_charts() {

            console.log('run_charts  typeof [' + typeof (Chart) + ']');

            if( typeof (Chart) === 'undefined'){ return; }

            console.log('init_charts');


            Chart.defaults.global.legend = {
                enabled: false
            };



            if ($('#canvas_line').length ){

                var canvas_line_00 = new Chart(document.getElementById("canvas_line"), {
                    type: 'line',
                    data: {
                        labels: ["January", "February", "March", "April", "May", "June", "July"],
                        datasets: [{
                            label: "My First dataset",
                            backgroundColor: "rgba(38, 185, 154, 0.31)",
                            borderColor: "rgba(38, 185, 154, 0.7)",
                            pointBorderColor: "rgba(38, 185, 154, 0.7)",
                            pointBackgroundColor: "rgba(38, 185, 154, 0.7)",
                            pointHoverBackgroundColor: "#fff",
                            pointHoverBorderColor: "rgba(220,220,220,1)",
                            pointBorderWidth: 1,
                            data: [31, 74, 6, 39, 20, 85, 7]
                        }, {
                            label: "My Second dataset",
                            backgroundColor: "rgba(3, 88, 106, 0.3)",
                            borderColor: "rgba(3, 88, 106, 0.70)",
                            pointBorderColor: "rgba(3, 88, 106, 0.70)",
                            pointBackgroundColor: "rgba(3, 88, 106, 0.70)",
                            pointHoverBackgroundColor: "#fff",
                            pointHoverBorderColor: "rgba(151,187,205,1)",
                            pointBorderWidth: 1,
                            data: [82, 23, 66, 9, 99, 4, 2]
                        }]
                    },
                });

            }


            if ($('#canvas_line1').length ){

                var canvas_line_01 = new Chart(document.getElementById("canvas_line1"), {
                    type: 'line',
                    data: {
                        labels: ["January", "February", "March", "April", "May", "June", "July"],
                        datasets: [{
                            label: "My First dataset",
                            backgroundColor: "rgba(38, 185, 154, 0.31)",
                            borderColor: "rgba(38, 185, 154, 0.7)",
                            pointBorderColor: "rgba(38, 185, 154, 0.7)",
                            pointBackgroundColor: "rgba(38, 185, 154, 0.7)",
                            pointHoverBackgroundColor: "#fff",
                            pointHoverBorderColor: "rgba(220,220,220,1)",
                            pointBorderWidth: 1,
                            data: [31, 74, 6, 39, 20, 85, 7]
                        }, {
                            label: "My Second dataset",
                            backgroundColor: "rgba(3, 88, 106, 0.3)",
                            borderColor: "rgba(3, 88, 106, 0.70)",
                            pointBorderColor: "rgba(3, 88, 106, 0.70)",
                            pointBackgroundColor: "rgba(3, 88, 106, 0.70)",
                            pointHoverBackgroundColor: "#fff",
                            pointHoverBorderColor: "rgba(151,187,205,1)",
                            pointBorderWidth: 1,
                            data: [82, 23, 66, 9, 99, 4, 2]
                        }]
                    },
                });

            }


            if ($('#canvas_line2').length ){

                var canvas_line_02 = new Chart(document.getElementById("canvas_line2"), {
                    type: 'line',
                    data: {
                        labels: ["January", "February", "March", "April", "May", "June", "July"],
                        datasets: [{
                            label: "My First dataset",
                            backgroundColor: "rgba(38, 185, 154, 0.31)",
                            borderColor: "rgba(38, 185, 154, 0.7)",
                            pointBorderColor: "rgba(38, 185, 154, 0.7)",
                            pointBackgroundColor: "rgba(38, 185, 154, 0.7)",
                            pointHoverBackgroundColor: "#fff",
                            pointHoverBorderColor: "rgba(220,220,220,1)",
                            pointBorderWidth: 1,
                            data: [31, 74, 6, 39, 20, 85, 7]
                        }, {
                            label: "My Second dataset",
                            backgroundColor: "rgba(3, 88, 106, 0.3)",
                            borderColor: "rgba(3, 88, 106, 0.70)",
                            pointBorderColor: "rgba(3, 88, 106, 0.70)",
                            pointBackgroundColor: "rgba(3, 88, 106, 0.70)",
                            pointHoverBackgroundColor: "#fff",
                            pointHoverBorderColor: "rgba(151,187,205,1)",
                            pointBorderWidth: 1,
                            data: [82, 23, 66, 9, 99, 4, 2]
                        }]
                    },
                });

            }


            if ($('#canvas_line3').length ){

                var canvas_line_03 = new Chart(document.getElementById("canvas_line3"), {
                    type: 'line',
                    data: {
                        labels: ["January", "February", "March", "April", "May", "June", "July"],
                        datasets: [{
                            label: "My First dataset",
                            backgroundColor: "rgba(38, 185, 154, 0.31)",
                            borderColor: "rgba(38, 185, 154, 0.7)",
                            pointBorderColor: "rgba(38, 185, 154, 0.7)",
                            pointBackgroundColor: "rgba(38, 185, 154, 0.7)",
                            pointHoverBackgroundColor: "#fff",
                            pointHoverBorderColor: "rgba(220,220,220,1)",
                            pointBorderWidth: 1,
                            data: [31, 74, 6, 39, 20, 85, 7]
                        }, {
                            label: "My Second dataset",
                            backgroundColor: "rgba(3, 88, 106, 0.3)",
                            borderColor: "rgba(3, 88, 106, 0.70)",
                            pointBorderColor: "rgba(3, 88, 106, 0.70)",
                            pointBackgroundColor: "rgba(3, 88, 106, 0.70)",
                            pointHoverBackgroundColor: "#fff",
                            pointHoverBorderColor: "rgba(151,187,205,1)",
                            pointBorderWidth: 1,
                            data: [82, 23, 66, 9, 99, 4, 2]
                        }]
                    },
                });

            }


            if ($('#canvas_line4').length ){

                var canvas_line_04 = new Chart(document.getElementById("canvas_line4"), {
                    type: 'line',
                    data: {
                        labels: ["January", "February", "March", "April", "May", "June", "July"],
                        datasets: [{
                            label: "My First dataset",
                            backgroundColor: "rgba(38, 185, 154, 0.31)",
                            borderColor: "rgba(38, 185, 154, 0.7)",
                            pointBorderColor: "rgba(38, 185, 154, 0.7)",
                            pointBackgroundColor: "rgba(38, 185, 154, 0.7)",
                            pointHoverBackgroundColor: "#fff",
                            pointHoverBorderColor: "rgba(220,220,220,1)",
                            pointBorderWidth: 1,
                            data: [31, 74, 6, 39, 20, 85, 7]
                        }, {
                            label: "My Second dataset",
                            backgroundColor: "rgba(3, 88, 106, 0.3)",
                            borderColor: "rgba(3, 88, 106, 0.70)",
                            pointBorderColor: "rgba(3, 88, 106, 0.70)",
                            pointBackgroundColor: "rgba(3, 88, 106, 0.70)",
                            pointHoverBackgroundColor: "#fff",
                            pointHoverBorderColor: "rgba(151,187,205,1)",
                            pointBorderWidth: 1,
                            data: [82, 23, 66, 9, 99, 4, 2]
                        }]
                    },
                });

            }


            // Line chart

            if ($('#lineChart').length ){

                var ctx = document.getElementById("lineChart");
                var lineChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: ["January", "February", "March", "April", "May", "June", "July"],
                        datasets: [{
                            label: "My First dataset",
                            backgroundColor: "rgba(38, 185, 154, 0.31)",
                            borderColor: "rgba(38, 185, 154, 0.7)",
                            pointBorderColor: "rgba(38, 185, 154, 0.7)",
                            pointBackgroundColor: "rgba(38, 185, 154, 0.7)",
                            pointHoverBackgroundColor: "#fff",
                            pointHoverBorderColor: "rgba(220,220,220,1)",
                            pointBorderWidth: 1,
                            data: [31, 74, 6, 39, 20, 85, 7]
                        }, {
                            label: "My Second dataset",
                            backgroundColor: "rgba(3, 88, 106, 0.3)",
                            borderColor: "rgba(3, 88, 106, 0.70)",
                            pointBorderColor: "rgba(3, 88, 106, 0.70)",
                            pointBackgroundColor: "rgba(3, 88, 106, 0.70)",
                            pointHoverBackgroundColor: "#fff",
                            pointHoverBorderColor: "rgba(151,187,205,1)",
                            pointBorderWidth: 1,
                            data: [82, 23, 66, 9, 99, 4, 2]
                        }]
                    },
                });

            }

            // Bar chart

            if ($('#mybarChart').length ){

                var ctx = document.getElementById("mybarChart");
                var mybarChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: ["January", "February", "March", "April", "May", "June", "July"],
                        datasets: [{
                            label: '# of Votes',
                            backgroundColor: "#26B99A",
                            data: [51, 30, 40, 28, 92, 50, 45]
                        }, {
                            label: '# of Votes',
                            backgroundColor: "#03586A",
                            data: [41, 56, 25, 48, 72, 34, 12]
                        }]
                    },

                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });

            }


            // Doughnut chart

            if ($('#canvasDoughnut').length ){

                var ctx = document.getElementById("canvasDoughnut");
                var data = {
                    labels: [
                        "Dark Grey",
                        "Purple Color",
                        "Gray Color",
                        "Green Color",
                        "Blue Color"
                    ],
                    datasets: [{
                        data: [120, 50, 140, 180, 100],
                        backgroundColor: [
                            "#455C73",
                            "#9B59B6",
                            "#BDC3C7",
                            "#26B99A",
                            "#3498DB"
                        ],
                        hoverBackgroundColor: [
                            "#34495E",
                            "#B370CF",
                            "#CFD4D8",
                            "#36CAAB",
                            "#49A9EA"
                        ]

                    }]
                };

                var canvasDoughnut = new Chart(ctx, {
                    type: 'doughnut',
                    tooltipFillColor: "rgba(51, 51, 51, 0.55)",
                    data: data
                });

            }

            // Radar chart

            if ($('#canvasRadar').length ){

                var ctx = document.getElementById("canvasRadar");
                var data = {
                    labels: ["Eating", "Drinking", "Sleeping", "Designing", "Coding", "Cycling", "Running"],
                    datasets: [{
                        label: "My First dataset",
                        backgroundColor: "rgba(3, 88, 106, 0.2)",
                        borderColor: "rgba(3, 88, 106, 0.80)",
                        pointBorderColor: "rgba(3, 88, 106, 0.80)",
                        pointBackgroundColor: "rgba(3, 88, 106, 0.80)",
                        pointHoverBackgroundColor: "#fff",
                        pointHoverBorderColor: "rgba(220,220,220,1)",
                        data: [65, 59, 90, 81, 56, 55, 40]
                    }, {
                        label: "My Second dataset",
                        backgroundColor: "rgba(38, 185, 154, 0.2)",
                        borderColor: "rgba(38, 185, 154, 0.85)",
                        pointColor: "rgba(38, 185, 154, 0.85)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(151,187,205,1)",
                        data: [28, 48, 40, 19, 96, 27, 100]
                    }]
                };

                var canvasRadar = new Chart(ctx, {
                    type: 'radar',
                    data: data,
                });

            }


            // Pie chart
            if ($('#pieChart').length ){

                var ctx = document.getElementById("pieChart");
                var data = {
                    datasets: [{
                        data: [120, 50, 140, 180, 100],
                        backgroundColor: [
                            "#455C73",
                            "#9B59B6",
                            "#BDC3C7",
                            "#26B99A",
                            "#3498DB"
                        ],
                        label: 'My dataset' // for legend
                    }],
                    labels: [
                        "Dark Gray",
                        "Purple",
                        "Gray",
                        "Green",
                        "Blue"
                    ]
                };

                var pieChart = new Chart(ctx, {
                    data: data,
                    type: 'pie',
                    otpions: {
                        legend: false
                    }
                });

            }


            // PolarArea chart

            if ($('#polarArea').length ){

                var ctx = document.getElementById("polarArea");
                var data = {
                    datasets: [{
                        data: [120, 50, 140, 180, 100],
                        backgroundColor: [
                            "#455C73",
                            "#9B59B6",
                            "#BDC3C7",
                            "#26B99A",
                            "#3498DB"
                        ],
                        label: 'My dataset'
                    }],
                    labels: [
                        "Dark Gray",
                        "Purple",
                        "Gray",
                        "Green",
                        "Blue"
                    ]
                };

                var polarArea = new Chart(ctx, {
                    data: data,
                    type: 'polarArea',
                    options: {
                        scale: {
                            ticks: {
                                beginAtZero: true
                            }
                        }
                    }
                });

            }
        }

        /* COMPOSE */

        function init_compose() {

            if( typeof ($.fn.slideToggle) === 'undefined'){ return; }
            console.log('init_compose');

            $('#compose, .compose-close').click(function(){
                $('.compose').slideToggle();
            });

        };


        /* ECHRTS */


        function init_echarts() {

            if( typeof (echarts) === 'undefined'){ return; }
            console.log('init_echarts');

            //echart Map

            if ($('#echart_world_map').length ){

                var echartMap = echarts.init(document.getElementById('echart_world_map'), theme);


                echartMap.setOption({
                    title: {
                        text: 'World Population (2010)',
                        subtext: 'from United Nations, Total population, both sexes combined, as of 1 July (thousands)',
                        x: 'center',
                        y: 'top'
                    },
                    tooltip: {
                        trigger: 'item',
                        formatter: function(params) {
                            var value = (params.value + '').split('.');
                            value = value[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + '.' + value[1];
                            return params.seriesName + '<br/>' + params.name + ' : ' + value;
                        }
                    },
                    toolbox: {
                        show: true,
                        orient: 'vertical',
                        x: 'right',
                        y: 'center',
                        feature: {
                            mark: {
                                show: true
                            },
                            dataView: {
                                show: true,
                                title: "Text View",
                                lang: [
                                    "Text View",
                                    "Close",
                                    "Refresh",
                                ],
                                readOnly: false
                            },
                            restore: {
                                show: true,
                                title: "Restore"
                            },
                            saveAsImage: {
                                show: true,
                                title: "Save Image"
                            }
                        }
                    },
                    dataRange: {
                        min: 0,
                        max: 1000000,
                        text: ['High', 'Low'],
                        realtime: false,
                        calculable: true,
                        color: ['#087E65', '#26B99A', '#CBEAE3']
                    },
                    series: [{
                        name: 'World Population (2010)',
                        type: 'map',
                        mapType: 'world',
                        roam: false,
                        mapLocation: {
                            y: 60
                        },
                        itemStyle: {
                            emphasis: {
                                label: {
                                    show: true
                                }
                            }
                        },
                        data: [{
                            name: 'Afghanistan',
                            value: 28397.812
                        }, {
                            name: 'Angola',
                            value: 19549.124
                        }, {
                            name: 'Albania',
                            value: 3150.143
                        }, {
                            name: 'United Arab Emirates',
                            value: 8441.537
                        }, {
                            name: 'Argentina',
                            value: 40374.224
                        }, {
                            name: 'Armenia',
                            value: 2963.496
                        }, {
                            name: 'French Southern and Antarctic Lands',
                            value: 268.065
                        }, {
                            name: 'Australia',
                            value: 22404.488
                        }, {
                            name: 'Austria',
                            value: 8401.924
                        }, {
                            name: 'Azerbaijan',
                            value: 9094.718
                        }, {
                            name: 'Burundi',
                            value: 9232.753
                        }, {
                            name: 'Belgium',
                            value: 10941.288
                        }, {
                            name: 'Benin',
                            value: 9509.798
                        }, {
                            name: 'Burkina Faso',
                            value: 15540.284
                        }, {
                            name: 'Bangladesh',
                            value: 151125.475
                        }, {
                            name: 'Bulgaria',
                            value: 7389.175
                        }, {
                            name: 'The Bahamas',
                            value: 66402.316
                        }, {
                            name: 'Bosnia and Herzegovina',
                            value: 3845.929
                        }, {
                            name: 'Belarus',
                            value: 9491.07
                        }, {
                            name: 'Belize',
                            value: 308.595
                        }, {
                            name: 'Bermuda',
                            value: 64.951
                        }, {
                            name: 'Bolivia',
                            value: 716.939
                        }, {
                            name: 'Brazil',
                            value: 195210.154
                        }, {
                            name: 'Brunei',
                            value: 27.223
                        }, {
                            name: 'Bhutan',
                            value: 716.939
                        }, {
                            name: 'Botswana',
                            value: 1969.341
                        }, {
                            name: 'Central African Republic',
                            value: 4349.921
                        }, {
                            name: 'Canada',
                            value: 34126.24
                        }, {
                            name: 'Switzerland',
                            value: 7830.534
                        }, {
                            name: 'Chile',
                            value: 17150.76
                        }, {
                            name: 'China',
                            value: 1359821.465
                        }, {
                            name: 'Ivory Coast',
                            value: 60508.978
                        }, {
                            name: 'Cameroon',
                            value: 20624.343
                        }, {
                            name: 'Democratic Republic of the Congo',
                            value: 62191.161
                        }, {
                            name: 'Republic of the Congo',
                            value: 3573.024
                        }, {
                            name: 'Colombia',
                            value: 46444.798
                        }, {
                            name: 'Costa Rica',
                            value: 4669.685
                        }, {
                            name: 'Cuba',
                            value: 11281.768
                        }, {
                            name: 'Northern Cyprus',
                            value: 1.468
                        }, {
                            name: 'Cyprus',
                            value: 1103.685
                        }, {
                            name: 'Czech Republic',
                            value: 10553.701
                        }, {
                            name: 'Germany',
                            value: 83017.404
                        }, {
                            name: 'Djibouti',
                            value: 834.036
                        }, {
                            name: 'Denmark',
                            value: 5550.959
                        }, {
                            name: 'Dominican Republic',
                            value: 10016.797
                        }, {
                            name: 'Algeria',
                            value: 37062.82
                        }, {
                            name: 'Ecuador',
                            value: 15001.072
                        }, {
                            name: 'Egypt',
                            value: 78075.705
                        }, {
                            name: 'Eritrea',
                            value: 5741.159
                        }, {
                            name: 'Spain',
                            value: 46182.038
                        }, {
                            name: 'Estonia',
                            value: 1298.533
                        }, {
                            name: 'Ethiopia',
                            value: 87095.281
                        }, {
                            name: 'Finland',
                            value: 5367.693
                        }, {
                            name: 'Fiji',
                            value: 860.559
                        }, {
                            name: 'Falkland Islands',
                            value: 49.581
                        }, {
                            name: 'France',
                            value: 63230.866
                        }, {
                            name: 'Gabon',
                            value: 1556.222
                        }, {
                            name: 'United Kingdom',
                            value: 62066.35
                        }, {
                            name: 'Georgia',
                            value: 4388.674
                        }, {
                            name: 'Ghana',
                            value: 24262.901
                        }, {
                            name: 'Guinea',
                            value: 10876.033
                        }, {
                            name: 'Gambia',
                            value: 1680.64
                        }, {
                            name: 'Guinea Bissau',
                            value: 10876.033
                        }, {
                            name: 'Equatorial Guinea',
                            value: 696.167
                        }, {
                            name: 'Greece',
                            value: 11109.999
                        }, {
                            name: 'Greenland',
                            value: 56.546
                        }, {
                            name: 'Guatemala',
                            value: 14341.576
                        }, {
                            name: 'French Guiana',
                            value: 231.169
                        }, {
                            name: 'Guyana',
                            value: 786.126
                        }, {
                            name: 'Honduras',
                            value: 7621.204
                        }, {
                            name: 'Croatia',
                            value: 4338.027
                        }, {
                            name: 'Haiti',
                            value: 9896.4
                        }, {
                            name: 'Hungary',
                            value: 10014.633
                        }, {
                            name: 'Indonesia',
                            value: 240676.485
                        }, {
                            name: 'India',
                            value: 1205624.648
                        }, {
                            name: 'Ireland',
                            value: 4467.561
                        }, {
                            name: 'Iran',
                            value: 240676.485
                        }, {
                            name: 'Iraq',
                            value: 30962.38
                        }, {
                            name: 'Iceland',
                            value: 318.042
                        }, {
                            name: 'Israel',
                            value: 7420.368
                        }, {
                            name: 'Italy',
                            value: 60508.978
                        }, {
                            name: 'Jamaica',
                            value: 2741.485
                        }, {
                            name: 'Jordan',
                            value: 6454.554
                        }, {
                            name: 'Japan',
                            value: 127352.833
                        }, {
                            name: 'Kazakhstan',
                            value: 15921.127
                        }, {
                            name: 'Kenya',
                            value: 40909.194
                        }, {
                            name: 'Kyrgyzstan',
                            value: 5334.223
                        }, {
                            name: 'Cambodia',
                            value: 14364.931
                        }, {
                            name: 'South Korea',
                            value: 51452.352
                        }, {
                            name: 'Kosovo',
                            value: 97.743
                        }, {
                            name: 'Kuwait',
                            value: 2991.58
                        }, {
                            name: 'Laos',
                            value: 6395.713
                        }, {
                            name: 'Lebanon',
                            value: 4341.092
                        }, {
                            name: 'Liberia',
                            value: 3957.99
                        }, {
                            name: 'Libya',
                            value: 6040.612
                        }, {
                            name: 'Sri Lanka',
                            value: 20758.779
                        }, {
                            name: 'Lesotho',
                            value: 2008.921
                        }, {
                            name: 'Lithuania',
                            value: 3068.457
                        }, {
                            name: 'Luxembourg',
                            value: 507.885
                        }, {
                            name: 'Latvia',
                            value: 2090.519
                        }, {
                            name: 'Morocco',
                            value: 31642.36
                        }, {
                            name: 'Moldova',
                            value: 103.619
                        }, {
                            name: 'Madagascar',
                            value: 21079.532
                        }, {
                            name: 'Mexico',
                            value: 117886.404
                        }, {
                            name: 'Macedonia',
                            value: 507.885
                        }, {
                            name: 'Mali',
                            value: 13985.961
                        }, {
                            name: 'Myanmar',
                            value: 51931.231
                        }, {
                            name: 'Montenegro',
                            value: 620.078
                        }, {
                            name: 'Mongolia',
                            value: 2712.738
                        }, {
                            name: 'Mozambique',
                            value: 23967.265
                        }, {
                            name: 'Mauritania',
                            value: 3609.42
                        }, {
                            name: 'Malawi',
                            value: 15013.694
                        }, {
                            name: 'Malaysia',
                            value: 28275.835
                        }, {
                            name: 'Namibia',
                            value: 2178.967
                        }, {
                            name: 'New Caledonia',
                            value: 246.379
                        }, {
                            name: 'Niger',
                            value: 15893.746
                        }, {
                            name: 'Nigeria',
                            value: 159707.78
                        }, {
                            name: 'Nicaragua',
                            value: 5822.209
                        }, {
                            name: 'Netherlands',
                            value: 16615.243
                        }, {
                            name: 'Norway',
                            value: 4891.251
                        }, {
                            name: 'Nepal',
                            value: 26846.016
                        }, {
                            name: 'New Zealand',
                            value: 4368.136
                        }, {
                            name: 'Oman',
                            value: 2802.768
                        }, {
                            name: 'Pakistan',
                            value: 173149.306
                        }, {
                            name: 'Panama',
                            value: 3678.128
                        }, {
                            name: 'Peru',
                            value: 29262.83
                        }, {
                            name: 'Philippines',
                            value: 93444.322
                        }, {
                            name: 'Papua New Guinea',
                            value: 6858.945
                        }, {
                            name: 'Poland',
                            value: 38198.754
                        }, {
                            name: 'Puerto Rico',
                            value: 3709.671
                        }, {
                            name: 'North Korea',
                            value: 1.468
                        }, {
                            name: 'Portugal',
                            value: 10589.792
                        }, {
                            name: 'Paraguay',
                            value: 6459.721
                        }, {
                            name: 'Qatar',
                            value: 1749.713
                        }, {
                            name: 'Romania',
                            value: 21861.476
                        }, {
                            name: 'Russia',
                            value: 21861.476
                        }, {
                            name: 'Rwanda',
                            value: 10836.732
                        }, {
                            name: 'Western Sahara',
                            value: 514.648
                        }, {
                            name: 'Saudi Arabia',
                            value: 27258.387
                        }, {
                            name: 'Sudan',
                            value: 35652.002
                        }, {
                            name: 'South Sudan',
                            value: 9940.929
                        }, {
                            name: 'Senegal',
                            value: 12950.564
                        }, {
                            name: 'Solomon Islands',
                            value: 526.447
                        }, {
                            name: 'Sierra Leone',
                            value: 5751.976
                        }, {
                            name: 'El Salvador',
                            value: 6218.195
                        }, {
                            name: 'Somaliland',
                            value: 9636.173
                        }, {
                            name: 'Somalia',
                            value: 9636.173
                        }, {
                            name: 'Republic of Serbia',
                            value: 3573.024
                        }, {
                            name: 'Suriname',
                            value: 524.96
                        }, {
                            name: 'Slovakia',
                            value: 5433.437
                        }, {
                            name: 'Slovenia',
                            value: 2054.232
                        }, {
                            name: 'Sweden',
                            value: 9382.297
                        }, {
                            name: 'Swaziland',
                            value: 1193.148
                        }, {
                            name: 'Syria',
                            value: 7830.534
                        }, {
                            name: 'Chad',
                            value: 11720.781
                        }, {
                            name: 'Togo',
                            value: 6306.014
                        }, {
                            name: 'Thailand',
                            value: 66402.316
                        }, {
                            name: 'Tajikistan',
                            value: 7627.326
                        }, {
                            name: 'Turkmenistan',
                            value: 5041.995
                        }, {
                            name: 'East Timor',
                            value: 10016.797
                        }, {
                            name: 'Trinidad and Tobago',
                            value: 1328.095
                        }, {
                            name: 'Tunisia',
                            value: 10631.83
                        }, {
                            name: 'Turkey',
                            value: 72137.546
                        }, {
                            name: 'United Republic of Tanzania',
                            value: 44973.33
                        }, {
                            name: 'Uganda',
                            value: 33987.213
                        }, {
                            name: 'Ukraine',
                            value: 46050.22
                        }, {
                            name: 'Uruguay',
                            value: 3371.982
                        }, {
                            name: 'United States of America',
                            value: 312247.116
                        }, {
                            name: 'Uzbekistan',
                            value: 27769.27
                        }, {
                            name: 'Venezuela',
                            value: 236.299
                        }, {
                            name: 'Vietnam',
                            value: 89047.397
                        }, {
                            name: 'Vanuatu',
                            value: 236.299
                        }, {
                            name: 'West Bank',
                            value: 13.565
                        }, {
                            name: 'Yemen',
                            value: 22763.008
                        }, {
                            name: 'South Africa',
                            value: 51452.352
                        }, {
                            name: 'Zambia',
                            value: 13216.985
                        }, {
                            name: 'Zimbabwe',
                            value: 13076.978
                        }]
                    }]
                });

            }

        }


        $(document).ready(function() {

            init_sparklines();
            init_flot_chart();
            init_sidebar();
            init_daterangepicker();
            init_charts();
            init_echarts();
            init_chart_doughnut();
            init_compose();
            init_autosize();

        });
    }

});